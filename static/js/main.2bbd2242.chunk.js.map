{"version":3,"sources":["SnakeBoard.js","utils.js","Points.js","LeaderBoard.js","App.js","index.js"],"names":["SnakeBoard","points","setPoints","initialRows","i","j","randomPosition","x","Math","floor","random","y","useState","rows","setRows","snake","setSnake","direction","setDirection","food","setFood","intervalId","isGameOver","setIsGameOver","document","addEventListener","e","keyCode","displayRows","map","row","className","tile","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newSnake","push","head","slice","find","b","checkGameOver","pointsList","JSON","parse","localStorage","getItem","setItem","stringify","window","dispatchEvent","Event","forEach","pop","newRows","displaySnake","Points","getSnakePoints","LeaderBoard","setPointsList","sortedPointsList","sort","a","App","onClick","location","reload","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2bbd2242.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {useInterval} from \"./utils\";\nimport \"./SnakeBoard.css\";\n\nconst SnakeBoard = ({points, setPoints}) => {\n  /*\n  initialRows on kaksiulotteinen array eli taulukko\n  alustettuna pelkillä tyhjillä arvoilla 'blank'\n  0 : (10) ['blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank']\n  1 : (10) ['blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank']\n  2 : (10) ['blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank', 'blank']\n  ...\n  */\n\n  const height = 10;\n  const width = 10;\n  var initialRows = [];\n  for (var i = 0; i < height; i++) {\n    initialRows[i] = [];\n    for (var j = 0; j < width; j++) {\n      initialRows[i][j] = \"blank\";\n    }\n  }\n\n  // Satunnainen sijainti x ja y -koordinaatistossa\n  const randomPosition = () => {\n    const position = {\n      x: Math.floor(Math.random() * width),\n      y: Math.floor(Math.random() * height)\n    };\n    return position;\n  };\n\n  /*\n  Reactin statea voi käyttää Hookien avulla myös tällaisissa luokattomissa\n  komponenteissa. https://joinex.fi/react-pahkinankuoressa/\n  */\n  // Rows eli rivit merkitsee tässä pelilaudan rivejä\n  const [rows, setRows] = useState(initialRows);\n  // Lisätään mato. Mato on lista objekteja, joihin tallennetaan madon osien x ja y -sijainnit.\n  // Alustetaan madon pään sijainniksi {x:0, y:0}\n  const [snake, setSnake] = useState([{x: 0, y: 0}]);\n  // Alustetaan madon suunnaksi oikealle\n  const [direction, setDirection] = useState(\"right\");\n  // Käytetään randomPosition funktiota alustamaan ruuan sijainti kun mato syö ruuan\n  const [food, setFood] = useState(randomPosition);\n  // Tallennetaan interval id stateen, jotta sen voi pelin loppuessa pysäyttää\n  const [intervalId, setIntervalId] = useState();\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  const changeDirectionWithKeys = e => {\n    var {keyCode} = e;\n    switch (keyCode) {\n      case 37:\n        setDirection(\"left\");\n        break;\n      case 38:\n        setDirection(\"top\");\n        break;\n      case 39:\n        setDirection(\"right\");\n        break;\n      case 40:\n        setDirection(\"bottom\");\n        break;\n      default:\n        break;\n    }\n  };\n  document.addEventListener(\"keydown\", changeDirectionWithKeys, false);\n\n  // Tässä kohdassa tehdään kaksiulotteisesta taulukosta näkyvä versio pelikentästä\n  const displayRows = rows.map((row, i) => (\n    <div className=\"Snake-row\" key={i}>\n      {row.map((tile, j) => (\n        <div className={`tile ${tile}`} key={j} />\n      ))}\n    </div>\n  ));\n\n  // Asetetaan mato pelilaudalle madon x ja y -sijaintien mukaisesti\n  // Asetetaan samalla myös ruoka pelilaudalle (x,y)\n  const displaySnake = () => {\n    const newRows = initialRows;\n    snake.forEach(tile => {\n      newRows[tile.x][tile.y] = \"snake\";\n    });\n    newRows[food.x][food.y] = \"food\";\n    setRows(newRows);\n  };\n\n  // Tarkistetaan onko mato osunut itseensä\n  const checkGameOver = () => {\n    const head = snake[0];\n    const body = snake.slice(1, -1);\n    return body.find(b => b.x === head.x && b.y === head.y);\n  };\n\n  // Liikutetaan matoa haluttuun suuntaan\n  const moveSnake = () => {\n    const newSnake = [];\n    switch (direction) {\n      // Jakojäännös (%) tarkoittaa jakolaskussa yli jäävää kokonaislukua.\n      // Esimerkiksi jos luku 17 jaetaan luvulla 5, jakojäännös on 2, koska 3 · 5 = 15, mutta 2 jää yli.\n      // snake[0] on madon ensimmäinen osa eli pää\n      case \"right\":\n        // x pysyy samana, y menee yhden askeleen oikealle eli plus yksi\n        newSnake.push({x: snake[0].x, y: (snake[0].y + 1) % width});\n        break;\n      case \"left\":\n        // x pysyy samana, y menee yhden askeleen vasemmalle eli miinus yksi\n        newSnake.push({x: snake[0].x, y: (snake[0].y - 1 + width) % width});\n        break;\n      case \"top\":\n        // x menee yhden askeleen ylöspäin eli miinus yksi, y pysyy samana\n        newSnake.push({x: (snake[0].x - 1 + height) % height, y: snake[0].y});\n        break;\n      case \"bottom\":\n        // x menee yhden askeleen alaspäin eli plus yksi, y pysyy samana\n        newSnake.push({x: (snake[0].x + 1) % height, y: snake[0].y});\n        break;\n      default:\n        break;\n    }\n\n    if (checkGameOver()) {\n      setIsGameOver(true);\n      // Pysäytä madon liikkumisen intervalli\n      clearInterval(intervalId);\n      // Lisää pisteet local storageen tulostaulukkoa varten\n      // HUOM! Local storage hyväksyy vain JSON:ia\n      const pointsList = JSON.parse(localStorage.getItem(\"snake-points\")) || [];\n      pointsList.push(points);\n      localStorage.setItem(\"snake-points\", JSON.stringify(pointsList));\n      window.dispatchEvent(new Event(\"storage\"));\n    }\n\n    // Lisätään madolle joka intervallilla / \"askeleella\" uusi pala\n    snake.forEach(tile => {\n      newSnake.push(tile);\n    });\n\n    // Vaihdetaan ruuan sijaintia jos mato syö ruuan.\n    if (snake[0].x === food.x && snake[0].y === food.y) {\n      setFood(randomPosition);\n      setPoints(points + 1);\n    } else {\n      // Jos mato ei syö ruokaa, poistetaan viimeinen hännän pala,\n      // jottei mato kasva joka askeleella, vaan vain silloin kun se saa ruuan kiinni!\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n    displaySnake();\n  };\n\n  // Käytetään kustomoitua intervalli-funktiota madon liikuttamiseen\n  useInterval(moveSnake, 250, setIntervalId);\n\n  return (\n    <div className=\"Snake-board\">\n      {displayRows}\n      {isGameOver && <div className=\"Game-over\">Game over!</div>}\n    </div>\n  );\n};\n\nexport default SnakeBoard;\n","import {useEffect, useRef} from \"react\";\n/*\nJaetaan tämä pätkä oppilaille pastebiniin https://pastebin.com/\nThanks Dan Abramov for useInterval hook\nhttps://overreacted.io/making-setinterval-declarative-with-react-hooks/\nThis useInterval Hook sets up an interval and clears it after unmounting.\nIt’s a combo of setInterval and clearInterval tied to the component lifecycle.\n*/\nexport const useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import React from 'react'\nimport './Points.css'\n\nconst Points = ({points}) => {\n  return (\n    <div className='Points'>{points} pistettä</div>\n  )\n}\n\nexport default Points\n","import React, {useState} from \"react\";\nimport \"./LeaderBoard.css\";\n\nconst getSnakePoints = () =>\n  JSON.parse(localStorage.getItem(\"snake-points\")) || [];\n\nconst LeaderBoard = () => {\n  const [pointsList, setPointsList] = useState(getSnakePoints());\n\n  window.addEventListener(\"storage\", () => {\n    setPointsList(getSnakePoints());\n  });\n\n  const sortedPointsList = pointsList.sort((a, b) => b - a);\n\n  return (\n    <div className=\"LeaderBoard\">\n      <div className=\"LeaderBoard-header\">Top 5</div>\n      <div className=\"LeaderBoard-points\">\n        {sortedPointsList.slice(0, 5).map((points, i) => (\n          <div key={`${points}-${i}`}>{points} pistettä</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LeaderBoard;\n","import React, {useState} from 'react'\nimport './App.css'\nimport SnakeBoard from './SnakeBoard'\nimport Points from './Points'\nimport LeaderBoard from './LeaderBoard'\n\nfunction App() {\n  const [points, setPoints] = useState(0)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Matopeli\n      </header>\n      <div className='Game'>\n        <Points points={points} />\n        <SnakeBoard points={points} setPoints={setPoints} />\n      </div>\n      <button onClick={() => window.location.reload(false)}>Uusi peli</button>\n      <LeaderBoard />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}